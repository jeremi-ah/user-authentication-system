{
  "info": {
    "name": "Banking API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Register Customer",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": "{{base_url}}/api/auth/register",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"testpass\"\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Register Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Register Response has token\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('token');",
              "    if(jsonData.token) {",
              "        pm.environment.set(\"jwt_token\", jsonData.token);",
              "    }",
              "});",
              "pm.test(\"Register Response token is string\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.token).to.be.a('string');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": "{{base_url}}//api/auth/login",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"testpass\"\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Login Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Login Response has token\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('token');",
              "    if(jsonData.token) {",
              "        pm.environment.set(\"jwt_token\", jsonData.token);",
              "    }",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Account",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": "{{base_url}}/api/accounts",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"accountHolderName\": \"Test User\",\n    \"balance\": 1000\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Create Account Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test(\"Create Account Response has correct structure\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('accountHolderName');",
              "    pm.expect(jsonData).to.have.property('balance');",
              "    if(jsonData.id) {",
              "        pm.environment.set(\"account_id\", jsonData.id);",
              "    }",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Deposit",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": "{{base_url}}/api/accounts/{{account_id}}/deposit",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"amount\": 500\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Deposit Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Deposit increases balance correctly\", function () {",
              "    var jsonData = pm.response.json();",
              "    var requestData = JSON.parse(pm.request.body.raw);",
              "    var oldBalance = pm.environment.get(\"previous_balance\");",
              "    var expectedBalance = oldBalance + requestData.amount;",
              "    pm.expect(jsonData.balance).to.equal(expectedBalance);",
              "    pm.environment.set(\"previous_balance\", jsonData.balance);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Withdraw",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": "{{base_url}}/api/accounts/{{account_id}}/withdraw",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"amount\": 200\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Withdraw Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Withdraw decreases balance correctly\", function () {",
              "    var jsonData = pm.response.json();",
              "    var requestData = JSON.parse(pm.request.body.raw);",
              "    var oldBalance = pm.environment.get(\"previous_balance\");",
              "    var expectedBalance = oldBalance - requestData.amount;",
              "    pm.expect(jsonData.balance).to.equal(expectedBalance);",
              "    pm.environment.set(\"previous_balance\", jsonData.balance);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Account",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          }
        ],
        "url": "{{base_url}}/api/accounts/{{account_id}}"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Get Account Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Get Account Response has correct structure\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('accountHolderName');",
              "    pm.expect(jsonData).to.have.property('balance');",
              "});"
            ]
          }
        }
      ]
    }
  ]
}